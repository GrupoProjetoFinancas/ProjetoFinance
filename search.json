[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Big Data for Finance",
    "section": "",
    "text": "Arthur Costa Schaitza - https://faexai.github.io/portfolio2/\nPamela Roland - https://pamroland.github.io/meuportfolio/\nMatheus Kochaki de Liz -"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "index.html#como-investir",
    "href": "index.html#como-investir",
    "title": "Big Data for Finance",
    "section": "üìå Como Investir?",
    "text": "üìå Como Investir?\nEssas empresas s√£o negociadas na NYSE e podem ser adquiridas atrav√©s de corretoras internacionais."
  },
  {
    "objectID": "index.html#por",
    "href": "index.html#por",
    "title": "Big Data for Finance",
    "section": "",
    "text": "Arthur Costa Schaitza - https://faexai.github.io/portfolio2/\nPamela Roland - https://pamroland.github.io/meuportfolio/\nMatheus Kochaki de Liz -"
  },
  {
    "objectID": "index.html#nova-solu√ß√£o",
    "href": "index.html#nova-solu√ß√£o",
    "title": "Big Data for Finance",
    "section": "Nova Solu√ß√£o",
    "text": "Nova Solu√ß√£o\n\n\n[1] \"SAP\"  \"ORCL\" \"CRM\"  \"NOW\"  \"IBM\" \n\n\nN√∫mero de retornos positivos:\n\n\n SAP ORCL  CRM  NOW  IBM \n 273  277  269  297  280 \n\n\n\nN√∫mero de retornos negativos:\n\n\n SAP ORCL  CRM  NOW  IBM \n 226  221  231  203  219 \n\n\n\nVolatilidade (desvio padr√£o):\n\n\n       SAP       ORCL        CRM        NOW        IBM \n0.01474467 0.01970165 0.02103840 0.02067332 0.01271442 \n\n\n\nExplica√ß√£o em Markdown:\nEste c√≥digo R analisa a s√©rie de pre√ßos de cinco grandes empresas de software e sistemas (SAP, ORCL, CRM, NOW e IBM) negociadas na NYSE, calculando log-retornos, analisando a distribui√ß√£o dos retornos e calculando a volatilidade usando dois m√©todos: o desvio padr√£o e um modelo GARCH.\n1) C√°lculo dos Log-Retornos:\nO c√≥digo come√ßa baixando os dados hist√≥ricos de pre√ßos para as cinco empresas usando a fun√ß√£o getSymbols do pacote quantmod. Em seguida, os dados s√£o combinados em um √∫nico dataframe chamado stock_data. Os log-retornos s√£o calculados usando a f√≥rmula log(p_t) - log(p_t-1), onde p_t √© o pre√ßo no tempo t. A coluna LogReturn no dataframe stock_data cont√©m os log-retornos calculados.\n2) An√°lise da Distribui√ß√£o dos Retornos:\nAp√≥s calcular os log-retornos, o c√≥digo analisa a distribui√ß√£o dos retornos. Ele calcula o n√∫mero de retornos positivos e negativos. Isso fornece uma ideia da dire√ß√£o predominante dos retornos ao longo do per√≠odo analisado. Em geral, espera-se que haja mais retornos positivos do que negativos em um mercado financeiro.\n3) C√°lculo da Volatilidade:\nA volatilidade √© uma medida da dispers√£o dos retornos em torno de sua m√©dia. O c√≥digo calcula a volatilidade usando dois m√©todos:\n\nDesvio Padr√£o: O desvio padr√£o dos log-retornos √© calculado usando a fun√ß√£o sd(). Este √© um m√©todo simples para estimar a volatilidade.\n\nConclus√µes:\nOs resultados do c√°lculo dos log-retornos e da volatilidade podem ser usados para avaliar o risco e o retorno de cada ativo. Por exemplo, a volatilidade pode ser usada para calcular o valor em risco (VaR) de um portf√≥lio."
  },
  {
    "objectID": "index.html#nova-solu√ß√£o-1",
    "href": "index.html#nova-solu√ß√£o-1",
    "title": "Big Data for Finance",
    "section": "Nova Solu√ß√£o",
    "text": "Nova Solu√ß√£o\n# Carregar pacotes necess√°rios\nlibrary(quantmod)\nlibrary(GARCH)\n\n# Obter dados de pre√ßos da a√ß√£o Apple (AAPL)\n# Usar quantmod para obter dados hist√≥ricos\nAAPL &lt;- getSymbols(\"AAPL\", from = \"2023-01-01\")\n\n# Converter a s√©rie de pre√ßos em um dataframe\nAAPL_df &lt;- data.frame(AAPL)\n\n# Calcular os log-refor√ßos\nAAPL_df$LogReturn &lt;- diff(AAPL_df$AAPL)\n\n# Analisar a distribui√ß√£o dos log-refor√ßos\n# Calcular a frequ√™ncia de refor√ßos positivos e negativos\npositive_returns &lt;- sum(AAPL_df$LogReturn &gt; 0)\nnegative_returns &lt;- sum(AAPL_df$LogReturn &lt; 0)\n\ncat(\"Frequ√™ncia de refor√ßos positivos:\", positive_returns, \"\\n\")\ncat(\"Frequ√™ncia de refor√ßos negativos:\", negative_returns, \"\\n\")\n\n# Calcular a volatilidade usando o desvio padr√£o\nvolatility_sd &lt;- sd(AAPL_df$LogReturn)\ncat(\"Volatilidade (Desvio Padr√£o):\", volatility_sd, \"\\n\")\n\n# Ajustar um modelo GARCH\n# Obter dados de pre√ßos\nprices &lt;- AAPL$AAPL\n\n# Ajustar o modelo GARCH\ngarch_model &lt;- GARCH(data = prices, model = \"GARCH\")\n\n# Extrair par√¢metros do modelo\nalpha &lt;- garch_model$estimates[\"alpha\"]\nbeta &lt;- garch_model$estimates[\"beta\"]\nsigma &lt;- garch_model$estimates[\"sigma\"]\n\n# Calcular a volatilidade usando o modelo GARCH\nvolatility_garch &lt;- sigma\n\n# Imprimir resultados\ncat(\"Volatilidade (Modelo GARCH):\", volatility_garch, \"\\n\")\n\n# Criar um gr√°fico da distribui√ß√£o dos log-refor√ßos\nhist(AAPL_df$LogReturn, main = \"Distribui√ß√£o dos Log-refor√ßos da Apple\", xlab = \"Log-refor√ßos\", col = \"skyblue\")\n\nExplica√ß√£o em Markdown\nEste c√≥digo R analisa a s√©rie de pre√ßos da a√ß√£o Apple (AAPL) para entender sua volatilidade e distribui√ß√£o de retornos. Ele realiza as seguintes etapas:\n\nObten√ß√£o de Dados:\n\nUtiliza o pacote quantmod para baixar dados hist√≥ricos de pre√ßos da a√ß√£o Apple a partir de 1¬∫ de janeiro de 2023. getSymbols() √© uma fun√ß√£o conveniente para obter dados financeiros de v√°rias fontes.\n\nC√°lculo dos Log-refor√ßos:\n\nCalcula os log-refor√ßos usando a f√≥rmula padr√£o: p_t = ln(p_t) - ln(p_t-1). Isso transforma os retornos percentuais em uma escala logar√≠tmica, que √© mais adequada para an√°lise de volatilidade. A fun√ß√£o diff() √© usada para calcular a diferen√ßa entre os pre√ßos consecutivos.\n\nAn√°lise da Distribui√ß√£o dos Log-refor√ßos:\n\nCalcula a frequ√™ncia de log-refor√ßos positivos e negativos. Isso fornece uma ideia da dire√ß√£o predominante dos retornos. Um n√∫mero maior de log-refor√ßos positivos indica que a a√ß√£o tem tido um desempenho melhor, enquanto um n√∫mero maior de log-refor√ßos negativos sugere o oposto.\n\nC√°lculo da Volatilidade:\n\nUsando o Desvio Padr√£o: Calcula a volatilidade usando o desvio padr√£o dos log-refor√ßos. O desvio padr√£o √© uma medida da dispers√£o dos dados em torno da m√©dia e √© uma estimativa simples da volatilidade.\nUsando o Modelo GARCH:\n\nAjuste do Modelo: Ajusta um modelo GARCH (Generalized Autoregressive Conditional Heteroskedasticity) aos log-refor√ßos. O modelo GARCH √© um modelo estat√≠stico que captura a heteroscedasticidade (vari√¢ncia n√£o constante) na s√©rie temporal. O pacote GARCH √© usado para ajustar o modelo.\nExtra√ß√£o de Par√¢metros: Extrai os par√¢metros alpha e beta do modelo GARCH ajustado.\nC√°lculo da Volatilidade: Calcula a volatilidade usando o par√¢metro sigma do modelo GARCH.\n\n\nVisualiza√ß√£o:\n\nCria um histograma da distribui√ß√£o dos log-refor√ßos. Isso permite visualizar a forma da distribui√ß√£o dos retornos e identificar quaisquer caracter√≠sticas importantes, como a presen√ßa de caudas pesadas (indicando maior probabilidade de eventos extremos).\n\n\nInterpreta√ß√£o dos Resultados:\n\nDistribui√ß√£o dos Log-refor√ßos: A an√°lise da frequ√™ncia de refor√ßos positivos e negativos fornece uma vis√£o geral do desempenho da a√ß√£o.\nVolatilidade (Desvio Padr√£o): O desvio padr√£o √© uma medida inicial da volatilidade.\nVolatilidade (Modelo GARCH): O modelo GARCH fornece uma estimativa mais precisa da volatilidade, levando em considera√ß√£o a depend√™ncia da vari√¢ncia ao longo do tempo. O modelo GARCH √© geralmente mais preciso do que o desvio padr√£o, especialmente para s√©ries temporais com heteroscedasticidade.\n\nObserva√ß√µes:\n\nEste c√≥digo √© um exemplo b√°sico e pode ser expandido para incluir an√°lises mais avan√ßadas, como testes de estacionariedade, an√°lise de res√≠duos e previs√£o de volatilidade.\nA escolha do modelo GARCH apropriado pode depender das caracter√≠sticas espec√≠ficas da s√©rie temporal.\nA an√°lise da volatilidade √© apenas uma parte da an√°lise de investimento. √â importante considerar outros fatores, como o risco, o retorno e os objetivos do investidor."
  },
  {
    "objectID": "companies.html",
    "href": "companies.html",
    "title": "Perfil das Empresas de Tecnologia para Neg√≥cios",
    "section": "",
    "text": "Este relat√≥rio apresenta um resumo comparativo das cinco maiores empresas de software empresarial escolhidas (ERP, CRM e plataformas em nuvem):"
  },
  {
    "objectID": "companies.html#vis√£o-geral-das-principais-empresas-de-software-corporativo",
    "href": "companies.html#vis√£o-geral-das-principais-empresas-de-software-corporativo",
    "title": "Perfil das Empresas de Tecnologia para Neg√≥cios",
    "section": "",
    "text": "Este relat√≥rio apresenta um resumo comparativo das cinco maiores empresas de software empresarial escolhidas (ERP, CRM e plataformas em nuvem):"
  },
  {
    "objectID": "companies.html#sap",
    "href": "companies.html#sap",
    "title": "Perfil das Empresas de Tecnologia para Neg√≥cios",
    "section": "SAP",
    "text": "SAP\n\nHist√≥ria\nFundada em 1972 em Walldorf, Alemanha, por cinco ex-funcion√°rios da IBM, a SAP (Systems, Applications & Products in Data Processing) revolucionou o software empresarial com o lan√ßamento do R/2 (mainframe) e depois o R/3 (client-server). Tornou-se l√≠der global em solu√ß√µes ERP.\n\n\nProdutos Principais\n\nSAP S/4HANA: ERP inteligente em tempo real\nSAP SuccessFactors: Solu√ß√£o de gest√£o de capital humano\nSAP Ariba: Plataforma de procurement digital\nSAP Concur: Gest√£o de despesas corporativas\nSAP Fieldglass: Gest√£o de for√ßa de trabalho contingente"
  },
  {
    "objectID": "companies.html#salesforce",
    "href": "companies.html#salesforce",
    "title": "Perfil das Empresas de Tecnologia para Neg√≥cios",
    "section": "Salesforce",
    "text": "Salesforce\n\nHist√≥ria\nFundada em 1999 por Marc Benioff em San Francisco, pioneira no modelo SaaS (Software as a Service). Revolucionou o CRM ao mover solu√ß√µes empresariais para a nuvem. Cresceu atrav√©s de aquisi√ß√µes estrat√©gicas (MuleSoft, Tableau, Slack).\n\n\nProdutos Principais\n\nSales Cloud: CRM para equipes de vendas\nService Cloud: Plataforma de atendimento ao cliente\nMarketing Cloud: Automa√ß√£o de marketing\nCommerce Cloud: Solu√ß√µes de e-commerce\nTableau: An√°lise e visualiza√ß√£o de dados\nSlack: Colabora√ß√£o corporativa"
  },
  {
    "objectID": "companies.html#servicenow",
    "href": "companies.html#servicenow",
    "title": "Perfil das Empresas de Tecnologia para Neg√≥cios",
    "section": "ServiceNow",
    "text": "ServiceNow\n\nHist√≥ria\nCriada em 2004 por Fred Luddy em Santa Clara, CA. Surgiu como plataforma de ITSM (IT Service Management) e expandiu para automa√ß√£o de fluxos de trabalho corporativos. Destaque por crescimento consistente acima de 30% ao ano.\n\n\nProdutos Principais\n\nNow Platform: Plataforma unificada de automa√ß√£o\nITSM: Gest√£o de servi√ßos de TI\nCustomer Service Management: Atendimento ao cliente\nHR Service Delivery: Automa√ß√£o de RH\nApp Engine: Desenvolvimento low-code"
  },
  {
    "objectID": "companies.html#ibm",
    "href": "companies.html#ibm",
    "title": "Perfil das Empresas de Tecnologia para Neg√≥cios",
    "section": "IBM",
    "text": "IBM\n\nHist√≥ria\nFundada em 1911 como Computing-Tabulating-Recording Company, tornou-se International Business Machines em 1924. Pioneira em mainframes, liderou a revolu√ß√£o da computa√ß√£o empresarial. Recente foco em IA e computa√ß√£o qu√¢ntica.\n\n\nProdutos Principais\n\nWatson: Plataforma de IA empresarial\nIBM Cloud: Infraestrutura e plataforma cloud\nRed Hat: Solu√ß√µes open source corporativas\nIBM Security: Seguran√ßa cibern√©tica\nIBM Z: Mainframes para miss√£o cr√≠tica"
  },
  {
    "objectID": "companies.html#oracle",
    "href": "companies.html#oracle",
    "title": "Perfil das Empresas de Tecnologia para Neg√≥cios",
    "section": "Oracle",
    "text": "Oracle\n\nHist√≥ria\nFundada em 1977 por Larry Ellison em Redwood City, CA. Tornou-se l√≠der em bancos de dados relacionais com o Oracle Database. Expandiu para aplica√ß√µes empresariais e cloud atrav√©s de aquisi√ß√µes (PeopleSoft, Siebel, NetSuite).\n\n\nProdutos Principais\n\nOracle Database: Sistema de gerenciamento de banco de dados\nOracle Cloud Infrastructure (OCI): Plataforma de nuvem\nOracle Fusion: Su√≠te de aplica√ß√µes empresariais\nJava: Linguagem de programa√ß√£o\nNetSuite: ERP em nuvem para m√©dias empresas\n\n\n\nComparativo de Foco Estrat√©gico\n\n\n\nEmpresa\nSegmento Prim√°rio\nDiferencial Competitivo\n\n\n\n\nSAP\nERP\nIntegra√ß√£o profunda industrial\n\n\nSalesforce\nCRM\nEcossistema de aplica√ß√µes\n\n\nServiceNow\nITSM\nAutoma√ß√£o de fluxos de trabalho\n\n\nIBM\nIA & Cloud H√≠brida\nSolu√ß√µes para grandes empresas\n\n\nOracle\nBanco de Dados\nPerformance e escalabilidade"
  },
  {
    "objectID": "companies.html#an√°lise-comparativa",
    "href": "companies.html#an√°lise-comparativa",
    "title": "Perfil das Empresas de Tecnologia para Neg√≥cios",
    "section": "An√°lise Comparativa",
    "text": "An√°lise Comparativa",
    "crumbs": [
      "Home",
      "Perfil das Empresas de Tecnologia para Neg√≥cios"
    ]
  },
  {
    "objectID": "companies.html#hist√≥ria",
    "href": "companies.html#hist√≥ria",
    "title": "Perfil das Empresas de Tecnologia para Neg√≥cios",
    "section": "### Hist√≥ria",
    "text": "### Hist√≥ria",
    "crumbs": [
      "Home",
      "Perfil das Empresas de Tecnologia para Neg√≥cios"
    ]
  },
  {
    "objectID": "companies.html#fundada-em-1972-em-walldorf-alemanha-por-cinco-ex-funcion√°rios-da-ibm-a-sap-systems-applications-products-in-data-processing-revolucionou-o-software-empresarial-com-o-lan√ßamento-do-r2-mainframe-e-depois-o-r3-client-server.-tornou-se-l√≠der-global-em-solu√ß√µes-erp.",
    "href": "companies.html#fundada-em-1972-em-walldorf-alemanha-por-cinco-ex-funcion√°rios-da-ibm-a-sap-systems-applications-products-in-data-processing-revolucionou-o-software-empresarial-com-o-lan√ßamento-do-r2-mainframe-e-depois-o-r3-client-server.-tornou-se-l√≠der-global-em-solu√ß√µes-erp.",
    "title": "Perfil das Empresas de Tecnologia para Neg√≥cios",
    "section": "Fundada em 1972 em Walldorf, Alemanha, por cinco ex-funcion√°rios da IBM, a SAP (Systems, Applications & Products in Data Processing) revolucionou o software empresarial com o lan√ßamento do R/2 (mainframe) e depois o R/3 (client-server). Tornou-se l√≠der global em solu√ß√µes ERP.",
    "text": "Fundada em 1972 em Walldorf, Alemanha, por cinco ex-funcion√°rios da IBM, a SAP (Systems, Applications & Products in Data Processing) revolucionou o software empresarial com o lan√ßamento do R/2 (mainframe) e depois o R/3 (client-server). Tornou-se l√≠der global em solu√ß√µes ERP.",
    "crumbs": [
      "Home",
      "Perfil das Empresas de Tecnologia para Neg√≥cios"
    ]
  },
  {
    "objectID": "companies.html#produtos-principais--",
    "href": "companies.html#produtos-principais--",
    "title": "Perfil das Empresas de Tecnologia para Neg√≥cios",
    "section": "### Produtos Principais -",
    "text": "### Produtos Principais -",
    "crumbs": [
      "Home",
      "Perfil das Empresas de Tecnologia para Neg√≥cios"
    ]
  },
  {
    "objectID": "companies.html#sap-s4hana-erp-inteligente-em-tempo-real--",
    "href": "companies.html#sap-s4hana-erp-inteligente-em-tempo-real--",
    "title": "Perfil das Empresas de Tecnologia para Neg√≥cios",
    "section": "**SAP S/4HANA**: ERP inteligente em tempo real -",
    "text": "**SAP S/4HANA**: ERP inteligente em tempo real -",
    "crumbs": [
      "Home",
      "Perfil das Empresas de Tecnologia para Neg√≥cios"
    ]
  },
  {
    "objectID": "companies.html#sap-successfactors-solu√ß√£o-de-gest√£o-de-capital-humano---sap-ariba-plataforma-de-procurement-digital---sap-concur-gest√£o-de-despesas-corporativas---sap-fieldglass-gest√£o-de-for√ßa-de-trabalho-contingente-salesforce-hist√≥ria-fundada-em-1999-por-marc-benioff-em-san-francisco-pioneira-no-modelo-saas-software-as-a-service.-revolucionou-o-crm-ao-mover-solu√ß√µes-empresariais-para-a-nuvem.-cresceu-atrav√©s-de-aquisi√ß√µes-estrat√©gicas-mulesoft-tableau-slack.-produtos-principais---sales-cloud-crm-para-equipes-de-vendas---service-cloud-plataforma-de-atendimento-ao-cliente---marketing-cloud-automa√ß√£o-de-marketing---commerce-cloud-solu√ß√µes-de-e-commerce---tableau-an√°lise-e-visualiza√ß√£o-de-dados---slack-colabora√ß√£o-corporativa-servicenow-hist√≥ria-criada-em-2004-por-fred-luddy-em-santa-clara-ca.-surgiu-como-plataforma-de-itsm-it-service-management-e-expandiu-para-automa√ß√£o-de-fluxos-de-trabalho-corporativos.-destaque-por-crescimento-consistente-acima-de-30-ao-ano.-produtos-principais---now-platform-plataforma-unificada-de-automa√ß√£o---itsm-gest√£o-de-servi√ßos-de-ti---customer-service-management-atendimento-ao-cliente---hr-service-delivery-automa√ß√£o-de-rh---app-engine-desenvolvimento-low-code-ibm-hist√≥ria-fundada-em-1911-como-computing-tabulating-recording-company-tornou-se-international-business-machines-em-1924.-pioneira-em-mainframes-liderou-a-revolu√ß√£o-da-computa√ß√£o-empresarial.-recente-foco-em-ia-e-computa√ß√£o-qu√¢ntica.-produtos-principais---watson-plataforma-de-ia-empresarial---ibm-cloud-infraestrutura-e-plataforma-cloud---red-hat-solu√ß√µes-open-source-corporativas---ibm-security-seguran√ßa-cibern√©tica---ibm-z-mainframes-para-miss√£o-cr√≠tica-oracle-hist√≥ria-fundada-em-1977-por-larry-ellison-em-redwood-city-ca.-tornou-se-l√≠der-em-bancos-de-dados-relacionais-com-o-oracle-database.-expandiu-para-aplica√ß√µes-empresariais-e-cloud-atrav√©s-de-aquisi√ß√µes-peoplesoft-siebel-netsuite.-produtos-principais---oracle-database-sistema-de-gerenciamento-de-banco-de-dados---oracle-cloud-infrastructure-oci-plataforma-de-nuvem---oracle-fusion-su√≠te-de-aplica√ß√µes-empresariais---java-linguagem-de-programa√ß√£o---netsuite-erp-em-nuvem-para-m√©dias-empresas-comparativo-de-foco-estrat√©gico-empresa-segmento-prim√°rio-diferencial-competitivo----sap-erp-integra√ß√£o-profunda-industrial-salesforce-crm-ecossistema-de-aplica√ß√µes-servicenow-itsm-automa√ß√£o-de-fluxos-de-trabalho-ibm-ia-cloud-h√≠brida-solu√ß√µes-para-grandes-empresas-oracle-banco-de-dados-performance-e-escalabilidade",
    "href": "companies.html#sap-successfactors-solu√ß√£o-de-gest√£o-de-capital-humano---sap-ariba-plataforma-de-procurement-digital---sap-concur-gest√£o-de-despesas-corporativas---sap-fieldglass-gest√£o-de-for√ßa-de-trabalho-contingente-salesforce-hist√≥ria-fundada-em-1999-por-marc-benioff-em-san-francisco-pioneira-no-modelo-saas-software-as-a-service.-revolucionou-o-crm-ao-mover-solu√ß√µes-empresariais-para-a-nuvem.-cresceu-atrav√©s-de-aquisi√ß√µes-estrat√©gicas-mulesoft-tableau-slack.-produtos-principais---sales-cloud-crm-para-equipes-de-vendas---service-cloud-plataforma-de-atendimento-ao-cliente---marketing-cloud-automa√ß√£o-de-marketing---commerce-cloud-solu√ß√µes-de-e-commerce---tableau-an√°lise-e-visualiza√ß√£o-de-dados---slack-colabora√ß√£o-corporativa-servicenow-hist√≥ria-criada-em-2004-por-fred-luddy-em-santa-clara-ca.-surgiu-como-plataforma-de-itsm-it-service-management-e-expandiu-para-automa√ß√£o-de-fluxos-de-trabalho-corporativos.-destaque-por-crescimento-consistente-acima-de-30-ao-ano.-produtos-principais---now-platform-plataforma-unificada-de-automa√ß√£o---itsm-gest√£o-de-servi√ßos-de-ti---customer-service-management-atendimento-ao-cliente---hr-service-delivery-automa√ß√£o-de-rh---app-engine-desenvolvimento-low-code-ibm-hist√≥ria-fundada-em-1911-como-computing-tabulating-recording-company-tornou-se-international-business-machines-em-1924.-pioneira-em-mainframes-liderou-a-revolu√ß√£o-da-computa√ß√£o-empresarial.-recente-foco-em-ia-e-computa√ß√£o-qu√¢ntica.-produtos-principais---watson-plataforma-de-ia-empresarial---ibm-cloud-infraestrutura-e-plataforma-cloud---red-hat-solu√ß√µes-open-source-corporativas---ibm-security-seguran√ßa-cibern√©tica---ibm-z-mainframes-para-miss√£o-cr√≠tica-oracle-hist√≥ria-fundada-em-1977-por-larry-ellison-em-redwood-city-ca.-tornou-se-l√≠der-em-bancos-de-dados-relacionais-com-o-oracle-database.-expandiu-para-aplica√ß√µes-empresariais-e-cloud-atrav√©s-de-aquisi√ß√µes-peoplesoft-siebel-netsuite.-produtos-principais---oracle-database-sistema-de-gerenciamento-de-banco-de-dados---oracle-cloud-infrastructure-oci-plataforma-de-nuvem---oracle-fusion-su√≠te-de-aplica√ß√µes-empresariais---java-linguagem-de-programa√ß√£o---netsuite-erp-em-nuvem-para-m√©dias-empresas-comparativo-de-foco-estrat√©gico-empresa-segmento-prim√°rio-diferencial-competitivo----sap-erp-integra√ß√£o-profunda-industrial-salesforce-crm-ecossistema-de-aplica√ß√µes-servicenow-itsm-automa√ß√£o-de-fluxos-de-trabalho-ibm-ia-cloud-h√≠brida-solu√ß√µes-para-grandes-empresas-oracle-banco-de-dados-performance-e-escalabilidade",
    "title": "Perfil das Empresas de Tecnologia para Neg√≥cios",
    "section": "**SAP SuccessFactors**: Solu√ß√£o de gest√£o de capital humano - **SAP Ariba**: Plataforma de procurement digital - **SAP Concur**: Gest√£o de despesas corporativas - **SAP Fieldglass**: Gest√£o de for√ßa de trabalho contingente ## Salesforce ### Hist√≥ria Fundada em 1999 por Marc Benioff em San Francisco, pioneira no modelo SaaS (Software as a Service). Revolucionou o CRM ao mover solu√ß√µes empresariais para a nuvem. Cresceu atrav√©s de aquisi√ß√µes estrat√©gicas (MuleSoft, Tableau, Slack). ### Produtos Principais - **Sales Cloud**: CRM para equipes de vendas - **Service Cloud**: Plataforma de atendimento ao cliente - **Marketing Cloud**: Automa√ß√£o de marketing - **Commerce Cloud**: Solu√ß√µes de e-commerce - **Tableau**: An√°lise e visualiza√ß√£o de dados - **Slack**: Colabora√ß√£o corporativa ## ServiceNow ### Hist√≥ria Criada em 2004 por Fred Luddy em Santa Clara, CA. Surgiu como plataforma de ITSM (IT Service Management) e expandiu para automa√ß√£o de fluxos de trabalho corporativos. Destaque por crescimento consistente acima de 30% ao ano. ### Produtos Principais - **Now Platform**: Plataforma unificada de automa√ß√£o - **ITSM**: Gest√£o de servi√ßos de TI - **Customer Service Management**: Atendimento ao cliente - **HR Service Delivery**: Automa√ß√£o de RH - **App Engine**: Desenvolvimento low-code ## IBM ### Hist√≥ria Fundada em 1911 como Computing-Tabulating-Recording Company, tornou-se International Business Machines em 1924. Pioneira em mainframes, liderou a revolu√ß√£o da computa√ß√£o empresarial. Recente foco em IA e computa√ß√£o qu√¢ntica. ### Produtos Principais - **Watson**: Plataforma de IA empresarial - **IBM Cloud**: Infraestrutura e plataforma cloud - **Red Hat**: Solu√ß√µes open source corporativas - **IBM Security**: Seguran√ßa cibern√©tica - **IBM Z**: Mainframes para miss√£o cr√≠tica ## Oracle ### Hist√≥ria Fundada em 1977 por Larry Ellison em Redwood City, CA. Tornou-se l√≠der em bancos de dados relacionais com o Oracle Database. Expandiu para aplica√ß√µes empresariais e cloud atrav√©s de aquisi√ß√µes (PeopleSoft, Siebel, NetSuite). ### Produtos Principais - **Oracle Database**: Sistema de gerenciamento de banco de dados - **Oracle Cloud Infrastructure (OCI)**: Plataforma de nuvem - **Oracle Fusion**: Su√≠te de aplica√ß√µes empresariais - **Java**: Linguagem de programa√ß√£o - **NetSuite**: ERP em nuvem para m√©dias empresas ### Comparativo de Foco Estrat√©gico | Empresa | Segmento Prim√°rio | Diferencial Competitivo | |‚Äî‚Äî‚Äî‚Äî|‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî-|‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî-| | SAP | ERP | Integra√ß√£o profunda industrial | | Salesforce | CRM | Ecossistema de aplica√ß√µes | | ServiceNow | ITSM | Automa√ß√£o de fluxos de trabalho | | IBM | IA & Cloud H√≠brida| Solu√ß√µes para grandes empresas | | Oracle | Banco de Dados | Performance e escalabilidade |",
    "text": "**SAP SuccessFactors**: Solu√ß√£o de gest√£o de capital humano - **SAP Ariba**: Plataforma de procurement digital - **SAP Concur**: Gest√£o de despesas corporativas - **SAP Fieldglass**: Gest√£o de for√ßa de trabalho contingente ## Salesforce ### Hist√≥ria Fundada em 1999 por Marc Benioff em San Francisco, pioneira no modelo SaaS (Software as a Service). Revolucionou o CRM ao mover solu√ß√µes empresariais para a nuvem. Cresceu atrav√©s de aquisi√ß√µes estrat√©gicas (MuleSoft, Tableau, Slack). ### Produtos Principais - **Sales Cloud**: CRM para equipes de vendas - **Service Cloud**: Plataforma de atendimento ao cliente - **Marketing Cloud**: Automa√ß√£o de marketing - **Commerce Cloud**: Solu√ß√µes de e-commerce - **Tableau**: An√°lise e visualiza√ß√£o de dados - **Slack**: Colabora√ß√£o corporativa ## ServiceNow ### Hist√≥ria Criada em 2004 por Fred Luddy em Santa Clara, CA. Surgiu como plataforma de ITSM (IT Service Management) e expandiu para automa√ß√£o de fluxos de trabalho corporativos. Destaque por crescimento consistente acima de 30% ao ano. ### Produtos Principais - **Now Platform**: Plataforma unificada de automa√ß√£o - **ITSM**: Gest√£o de servi√ßos de TI - **Customer Service Management**: Atendimento ao cliente - **HR Service Delivery**: Automa√ß√£o de RH - **App Engine**: Desenvolvimento low-code ## IBM ### Hist√≥ria Fundada em 1911 como Computing-Tabulating-Recording Company, tornou-se International Business Machines em 1924. Pioneira em mainframes, liderou a revolu√ß√£o da computa√ß√£o empresarial. Recente foco em IA e computa√ß√£o qu√¢ntica. ### Produtos Principais - **Watson**: Plataforma de IA empresarial - **IBM Cloud**: Infraestrutura e plataforma cloud - **Red Hat**: Solu√ß√µes open source corporativas - **IBM Security**: Seguran√ßa cibern√©tica - **IBM Z**: Mainframes para miss√£o cr√≠tica ## Oracle ### Hist√≥ria Fundada em 1977 por Larry Ellison em Redwood City, CA. Tornou-se l√≠der em bancos de dados relacionais com o Oracle Database. Expandiu para aplica√ß√µes empresariais e cloud atrav√©s de aquisi√ß√µes (PeopleSoft, Siebel, NetSuite). ### Produtos Principais - **Oracle Database**: Sistema de gerenciamento de banco de dados - **Oracle Cloud Infrastructure (OCI)**: Plataforma de nuvem - **Oracle Fusion**: Su√≠te de aplica√ß√µes empresariais - **Java**: Linguagem de programa√ß√£o - **NetSuite**: ERP em nuvem para m√©dias empresas ### Comparativo de Foco Estrat√©gico | Empresa | Segmento Prim√°rio | Diferencial Competitivo | |‚Äî‚Äî‚Äî‚Äî|‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî-|‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî-| | SAP | ERP | Integra√ß√£o profunda industrial | | Salesforce | CRM | Ecossistema de aplica√ß√µes | | ServiceNow | ITSM | Automa√ß√£o de fluxos de trabalho | | IBM | IA & Cloud H√≠brida| Solu√ß√µes para grandes empresas | | Oracle | Banco de Dados | Performance e escalabilidade |",
    "crumbs": [
      "Home",
      "Perfil das Empresas de Tecnologia para Neg√≥cios"
    ]
  },
  {
    "objectID": "RetPortfolio.html",
    "href": "RetPortfolio.html",
    "title": "Ci√™ncia de Dados para Neg√≥cios: Big Data for Finance Project",
    "section": "",
    "text": "Resumo\n\n\n\n\nEste material apresenta uma introdu√ß√£o pr√°tica aos fundamentos da an√°lise de portf√≥lio, combinando teoria e aplica√ß√£o pr√°tica em R e Python. O conte√∫do abrange os seguintes t√≥picos:\n\nConceitos B√°sicos e Diversifica√ß√£o:\nExplicamos os objetivos dos investidores e a import√¢ncia de diversificar os investimentos para mitigar riscos, destacando como ativos com comportamentos diferentes podem se compensar.\nAn√°lise de Dados e Compara√ß√£o de Ativos:\nDemonstra-se como coletar dados hist√≥ricos de futuros de commodities (usando quantmod em R e yahooquery em Python), normalizar os pre√ßos (base 100) e visualizar a evolu√ß√£o dos ativos ao longo do tempo. Isso permite identificar diferen√ßas de performance e volatilidade entre os ativos.\nC√°lculo dos Retornos:\nS√£o calculados os log-retornos dos ativos, que, por serem aditivos, facilitam a acumula√ß√£o de retornos e a constru√ß√£o da curva de patrim√¥nio do portf√≥lio.\nConstru√ß√£o da Curva de Patrim√¥nio (Equity Curve):\nA partir de uma data de compra definida (por exemplo, ‚Äú2020-01-02‚Äù), √© calculado o retorno acumulado do portf√≥lio utilizando uma carteira equi-ponderada e a estrat√©gia buy-and-hold. Essa curva ilustra como os retornos se acumulam ao longo do tempo.\nAn√°lise Din√¢mica de Risco:\nUtilizando uma janela m√≥vel de 60 dias, s√£o calculadas m√©tricas de risco como a volatilidade anualizada e o Sharpe Ratio. Essas m√©tricas ajudam a identificar per√≠odos de maior ou menor risco e a avaliar a efici√™ncia do portf√≥lio em termos de retorno ajustado ao risco.\nEstrat√©gias de Rebalanceamento e An√°lise de Drawdown:\nO material compara estrat√©gias de rebalanceamento ‚Äì din√¢mico (com ajuste autom√°tico quando h√° desvios superiores a 10%) e mensal ‚Äì e analisa os drawdowns do portf√≥lio, evidenciando os momentos de maiores perdas. Essa compara√ß√£o auxilia na compreens√£o dos impactos dos diferentes m√©todos de ajuste dos pesos na performance e no risco do portf√≥lio.\n\nEm resumo, os alunos aprendem a estruturar, monitorar e ajustar uma carteira de investimentos utilizando ferramentas estat√≠sticas e computacionais, o que √© fundamental para a tomada de decis√µes informadas na gest√£o de risco e retorno.\n\n\n\n\nIntro\nEste conte√∫do √© uma introdu√ß√£o pr√°tica aos fundamentos da an√°lise de portf√≥lio, abordando os ‚Äúblocos de constru√ß√£o‚Äù essenciais para entender como montar e avaliar uma carteira de investimentos. Em resumo, o material ensina:\n\nConceitos B√°sicos e Diversifica√ß√£o:\nExplica o objetivo central dos investidores ‚Äì obter lucros enquanto limitam os riscos ‚Äì e como a diversifica√ß√£o pode ajudar a mitigar perdas, pois ativos com comportamentos diferentes podem se compensar.\nAn√°lise de Dados e Compara√ß√£o de Ativos:\nUtiliza exemplos pr√°ticos (como comparar o desempenho da Coca-Cola com a PepsiCo) para demonstrar como visualizar a evolu√ß√£o do valor de um investimento ao longo do tempo. Isso √© feito calculando a raz√£o entre os pre√ßos das a√ß√µes (por exemplo, a raz√£o ko/pep) e plotando essa rela√ß√£o para identificar qual empresa teve melhor desempenho em determinado per√≠odo.\nC√°lculo dos Pesos da Carteira:\nEnsina como calcular os pesos de cada ativo quando se conhece o valor investido em cada um. Al√©m disso, mostra como determinar os pesos em uma carteira ponderada por capitaliza√ß√£o de mercado, onde cada peso √© proporcional √† capitaliza√ß√£o do ativo em rela√ß√£o √† soma total.\nC√°lculo do Retorno do Portf√≥lio:\nDemonstra que o retorno do portf√≥lio pode ser calculado como a m√©dia ponderada dos retornos dos ativos individuais, utilizando tanto os retornos simples quanto os brutos (ou acumulados) para per√≠odos m√∫ltiplos. Tamb√©m destaca a import√¢ncia de entender que ganhos e perdas de mesmo percentual n√£o se compensam de forma sim√©trica ‚Äì por exemplo, uma perda de 50% exige um ganho de 100% para recuperar o valor inicial.\nUso do PerformanceAnalytics:\nApresenta o pacote PerformanceAnalytics como uma ferramenta poderosa para:\n\nCalcular os retornos dos ativos e do portf√≥lio.\nComparar estrat√©gias de investimento, especialmente entre buy-and-hold (manter os ativos sem ajustes) e rebalancing (ajustar periodicamente os pesos para manter a aloca√ß√£o original).\nMonitorar a evolu√ß√£o dos pesos dos ativos ao longo do tempo, utilizando a op√ß√£o verbose para extrair informa√ß√µes detalhadas, como os pesos no in√≠cio e no final de cada per√≠odo.\n\n\nEm suma, o conte√∫do foca em ensinar os fundamentos da constru√ß√£o e avalia√ß√£o de portf√≥lios, combinando teoria com exemplos pr√°ticos em R (e, em vers√µes adaptadas, em Python), para que o aluno compreenda como os investimentos podem ser estruturados, monitorados e ajustados de acordo com a estrat√©gia desejada.\n\nR\n\n\nCarregamos os dados:\n\n\nCode\ntickers &lt;- c(\n         \"SAP\",  # SAP\n    \"ORCL\",  # ORACLE\n    \"CRM\",  # SALESFORCE\n    \"NOW\",  # SERVICENOW\n    \"IBM\" , # IBM\n    \"MSFT\" # Microsoft\n)\n\n\nEnt√£o baixo os dados via Yahoo!Finance:\n\n\nCode\nportfolioPrices &lt;- NULL\n  for ( Ticker in tickers )\n    portfolioPrices &lt;- cbind(\n      portfolioPrices, \n      quantmod::getSymbols.yahoo(\n        Ticker,\n        from = \"2019-01-01\",\n        auto.assign = FALSE\n      )[,4]\n    )\n\nportfolioPrices &lt;- portfolioPrices[apply(portfolioPrices, 1, function(x) all(!is.na(x))),]\n\ncolnames(portfolioPrices) &lt;- c(\n  \"SAP\",\n  \"ORACLE\",\n  \"SALESFORCE\",\n  \"SERVICENOW\",\n  \"IBM\",\n  \"MICROSOFT\"\n)\n\n# Visualizar com DT\nDT::datatable(tail(portfolioPrices), options = list(pageLength = 10, scrollX = TRUE)) \n\n\n\n\n\n\nVisualizando os dados, temos:\n\n\nCode\nportfolioPrices |&gt; as.data.frame() |&gt;\n  dplyr::mutate(\n    time = seq_along( MICROSOFT )\n  ) |&gt;\n  tidyr::pivot_longer(\n    !time,\n    names_to = \"Variables\",\n    values_to = \"Value\"  \n      ) |&gt;\n  dplyr::group_by(Variables) |&gt;\n  timetk::plot_time_series(\n    time,\n    Value,\n    .interactive = F, # Change for TRUE for better visualization\n    .facet_ncol = 2,\n    .smooth = FALSE\n  ) +\n  ggplot2::theme(\n    strip.background = ggplot2::element_rect(fill = \"white\", colour = \"white\")\n  )\n\n\n\n\n\n\n\n\n\nO gr√°fico de s√©ries temporais dos pre√ßos mostra como cada contrato futuro (como ‚ÄúSAP‚Äù, ‚ÄúORACLE‚Äù, etc.) evoluiu desde 2019. Voc√™ pode notar diferen√ßas de n√≠vel e volatilidade entre os ativos ‚Äì por exemplo, alguns podem ter uma trajet√≥ria de alta mais acentuada, enquanto outros apresentam maior varia√ß√£o di√°ria. Essa visualiza√ß√£o refor√ßa a import√¢ncia da diversifica√ß√£o, pois cada ativo se comporta de forma distinta.\n\nSimulando uma data de compra\nNeste exemplo, definimos uma data de compra (por exemplo, ‚Äú2020-01-02‚Äù) e usamos os dados at√© ontem para calcular o retorno do portf√≥lio.\n\n\nCode\n# Definir a data de compra e a data final (ontem)\ndata_compra &lt;- as.Date(\"2020-01-02\")\ndata_final &lt;- Sys.Date() - 1\n\n# Selecionar o per√≠odo dos dados de pre√ßos para o portf√≥lio\nportfolioPrices_periodo &lt;- portfolioPrices[paste0(data_compra, \"/\", data_final)]\n\n# Visualizar os dados filtrados\nDT::datatable(tail(portfolioPrices_periodo), options = list(pageLength = 10, scrollX = TRUE))\n\n\n\n\n\n\n\n\nCalculando os Retornos e o Retorno do Portf√≥lio para o Per√≠odo\nUtilizaremos retornos discretos para essa an√°lise.\n\n\nCode\n# Calcular os retornos di√°rios discretos para o per√≠odo definido\nreturns_periodo &lt;- PerformanceAnalytics::Return.calculate(portfolioPrices_periodo, method = \"discrete\")\nreturns_periodo &lt;- na.omit(returns_periodo)\n\n# N√∫mero de ativos na carteira e definir pesos iguais\nnum_assets_periodo &lt;- ncol(returns_periodo)\nequal_weights_periodo &lt;- rep(1 / num_assets_periodo, num_assets_periodo)\n\n# Calcular o retorno do portf√≥lio para o per√≠odo (Buy & Hold, sem rebalanceamento)\nportfolio_return_periodo &lt;- PerformanceAnalytics::Return.portfolio(R = returns_periodo, weights = equal_weights_periodo)\n\n# Visualizar os √∫ltimos retornos do portf√≥lio\ntail(portfolio_return_periodo)\n\n\n           portfolio.returns\n2025-04-03      -0.043653798\n2025-04-04      -0.058665943\n2025-04-07      -0.002369027\n2025-04-08      -0.013597879\n2025-04-09       0.104167948\n2025-04-10      -0.032909527\n\n\nEmbora n√£o haja um gr√°fico de distribui√ß√£o diretamente, a an√°lise dos retornos di√°rios (calculados via log-retornos) permite observar que as varia√ß√µes percentuais s√£o relativamente pequenas no dia a dia, mas, quando acumuladas, podem resultar em diferen√ßas significativas no valor do portf√≥lio. Essa etapa √© fundamental para entender como os retornos individuais se somam para afetar o desempenho global.\n\n\nAn√°lise Din√¢mica: Janela M√≥vel de Volatilidade e Sharpe Ratio\nCom o objeto portfolio_return_periodo definido, podemos calcular m√©tricas din√¢micas com uma janela m√≥vel de 60 dias:\n\n\nCode\nlibrary(zoo)\n\n# Definir janela m√≥vel de 60 dias\nwindow_size &lt;- 60\n\n# Calcular a volatilidade (desvio padr√£o) dos retornos do portf√≥lio em janela m√≥vel e anualizar (252 dias)\nrolling_vol &lt;- rollapply(portfolio_return_periodo, width = window_size, FUN = sd, by.column = FALSE, fill = NA) * sqrt(252)\n\n# Calcular o Sharpe Ratio (m√©dia/SD) para a janela m√≥vel, tamb√©m anualizado\nrolling_sharpe &lt;- rollapply(portfolio_return_periodo, width = window_size, FUN = function(x) { mean(x) / sd(x) }, by.column = FALSE, fill = NA) * sqrt(252)\n\n# Converter as s√©ries rolling para um data frame\nrolling_metrics_df &lt;- data.frame(\n  Date = as.Date(index(rolling_vol)),\n  Volatility = coredata(rolling_vol),\n  Sharpe = coredata(rolling_sharpe)\n)\n\n# Plotar as m√©tricas de volatilidade e Sharpe Ratio\nlibrary(ggplot2)\nlibrary(patchwork)\n\n# Gr√°fico da Volatilidade Anualizada\np_vol &lt;- ggplot(rolling_metrics_df, aes(x = Date, y = Volatility)) +\n  geom_line(color = \"blue\") +\n  labs(title = \"Volatilidade (Anualizada)\", x = \"Data\", y = \"Volatilidade\") +\n  theme_minimal()\n\n# Gr√°fico do Sharpe Ratio Anualizado\np_sharpe &lt;- ggplot(rolling_metrics_df, aes(x = Date, y = Sharpe)) +\n  geom_line(color = \"red\") +\n  labs(title = \"Sharpe Ratio (Anualizado)\", x = \"Data\", y = \"Sharpe Ratio\") +\n  theme_minimal()\n\n# Exibir os gr√°ficos um acima do outro\np_vol / p_sharpe\n\n\n\n\n\n\n\n\n\nNo gr√°fico que apresenta as m√©tricas de volatilidade e do Sharpe Ratio com uma janela m√≥vel de 60 dias, vemos duas curvas:\n\nVolatilidade Anualizada: Mostra a varia√ß√£o de risco do portf√≥lio ao longo do tempo. Per√≠odos com volatilidade mais alta indicam maior incerteza nos retornos.\nSharpe Ratio Anualizado: Relaciona o retorno m√©dio ao risco (volatilidade). Uma curva mais elevada sugere que, naquele per√≠odo, o portf√≥lio obteve um retorno ajustado ao risco mais favor√°vel.\n\nJuntas, essas m√©tricas ajudam a identificar momentos em que a rela√ß√£o retorno/risco se alterou, evidenciando, por exemplo, se o portf√≥lio se tornou mais arriscado ou se houve per√≠odos de efici√™ncia na performance.\n\n\nCurva de Patrim√¥nio (Equity Curve) e Retorno Acumulado\nCalculamos a curva de patrim√¥nio acumulada a partir dos retornos do portf√≥lio e plotamos essa evolu√ß√£o:\n\n\nCode\n# Calcular a curva de patrim√¥nio acumulada: produto acumulado de (1 + retorno)\nequity_curve &lt;- cumprod(1 + portfolio_return_periodo)\n\n# Converter o objeto xts para um data frame para o timetk\nequity_curve_df &lt;- data.frame(\n  Date = as.Date(index(equity_curve)),\n  Equity = as.numeric(equity_curve)\n)\n\n# Plotar a evolu√ß√£o da curva de patrim√¥nio usando timetk\nlibrary(timetk)\nplot_time_series(\n  equity_curve_df, \n  Date, \n  Equity, \n  .interactive = FALSE,\n  .title = \"Curva de Patrim√¥nio Acumulada do Portf√≥lio (Buy-and-Hold)\",\n  .x_lab = \"Data\",\n  .y_lab = \"Valor Acumulado (Base 1)\"\n)\n\n\n\n\n\n\n\n\n\nCode\n# Calcular e exibir o retorno acumulado do portf√≥lio em porcentagem\nretorno_acumulado &lt;- prod(1 + portfolio_return_periodo) - 1\nprint(paste(\"Retorno acumulado do portf√≥lio de\", format(data_compra, \"%d/%m/%Y\"),\n            \"at√©\", format(data_final, \"%d/%m/%Y\"), \"√©:\", round(retorno_acumulado * 100, 2), \"%\"))\n\n\n[1] \"Retorno acumulado do portf√≥lio de 02/01/2020 at√© 10/04/2025 √©: 112.11 %\"\n\n\nA curva de patrim√¥nio acumulada apresenta o crescimento do portf√≥lio ao longo do tempo, iniciando com um capital normalizado (base 1). Essa visualiza√ß√£o permite observar como os retornos di√°rios se acumulam e como o valor do portf√≥lio evolui de forma cumulativa. Per√≠odos de alta tend√™ncia resultam em eleva√ß√µes significativas da curva, enquanto quedas ou per√≠odos de baixa se refletem em momentos de estagna√ß√£o ou de retra√ß√£o.\n\n\nRebalanceamento Din√¢mico e An√°lise de Drawdown\nImplementamos uma fun√ß√£o para rebalanceamento din√¢mico que reseta os pesos alvo sempre que algum ativo desvia mais de 10% do peso desejado e, em seguida, analisamos o drawdown.\n\n\nCode\n# Definir target_weights com base em returns_periodo\nnum_assets_periodo &lt;- ncol(returns_periodo)\ntarget_weights &lt;- rep(1 / num_assets_periodo, num_assets_periodo)\n\n# Fun√ß√£o para calcular o retorno do portf√≥lio com rebalanceamento din√¢mico por threshold\ncalcular_retorno_dinamico &lt;- function(returns, target_weights, threshold = 0.10) {\n  n &lt;- ncol(returns)\n  current_weights &lt;- target_weights  # Pesos iniciais (alvo)\n  port_returns &lt;- numeric(nrow(returns))  # Vetor para armazenar os retornos di√°rios do portf√≥lio\n  \n  ret_mat &lt;- as.matrix(returns)\n  \n  for (i in 1:nrow(ret_mat)) {\n    # Calcular o retorno do portf√≥lio no dia: soma(w_i * r_i)\n    port_ret &lt;- sum(current_weights * ret_mat[i, ])\n    port_returns[i] &lt;- port_ret\n    \n    # Atualizar os pesos: multiplicar cada peso por (1 + r_i) e normalizar\n    new_weights &lt;- current_weights * (1 + ret_mat[i, ])\n    new_weights &lt;- new_weights / sum(new_weights)\n    \n    # Se algum peso desviar mais que o threshold do peso alvo, rebalanceia\n    if (any(abs(new_weights - target_weights) &gt; threshold)) {\n      current_weights &lt;- target_weights\n    } else {\n      current_weights &lt;- new_weights\n    }\n  }\n  \n  # Retornar os retornos do portf√≥lio como objeto xts (usando as mesmas datas dos retornos)\n  port_returns_xts &lt;- xts::xts(port_returns, order.by = index(returns))\n  return(port_returns_xts)\n}\n\n# Calcular os retornos do portf√≥lio com rebalanceamento din√¢mico usando um threshold de 10%\nport_ret_dynamic &lt;- calcular_retorno_dinamico(returns_periodo, target_weights, threshold = 0.10)\n\n\n\n\nCurva de Patrim√¥nio e Plotagem com Rebalanceamento Din√¢mico\n\n\nCode\n# Calcular a curva de patrim√¥nio acumulada com a estrat√©gia din√¢mica\nequity_dynamic &lt;- cumprod(1 + port_ret_dynamic)\n\n# Converter para data frame para o timetk\nequity_dynamic_df &lt;- data.frame(\n  Date = as.Date(index(equity_dynamic)),\n  Equity = as.numeric(equity_dynamic)\n)\n\n# Plotar a curva de patrim√¥nio usando timetk\nplot_time_series(\n  equity_dynamic_df, \n  Date, \n  Equity, \n  .interactive = FALSE,\n  .title = \"Curva de Patrim√¥nio - Rebalanceamento Din√¢mico (Threshold 10%)\",\n  .x_lab = \"Data\",\n  .y_lab = \"Valor Acumulado (Base 1)\"\n)\n\n\n\n\n\n\n\n\n\nCurva de Patrim√¥nio com Rebalanceamento Din√¢mico: Ao aplicar o rebalanceamento din√¢mico (com um threshold de 10%), a curva de patrim√¥nio tende a se estabilizar, pois os pesos s√£o resetados para a aloca√ß√£o original sempre que houver desvios excessivos. Isso ajuda a manter a diversifica√ß√£o e evita que um √∫nico ativo, com alta performance, acabe dominando a carteira.\n\n\nAn√°lise de Drawdown\n\n\nCode\n# Plotar o gr√°fico de drawdown da estrat√©gia din√¢mica\nPerformanceAnalytics::chart.Drawdown(port_ret_dynamic, main = \"Drawdown - Rebalanceamento Din√¢mico\")\n\n\n\n\n\n\n\n\n\nCode\n# Calcular o drawdown m√°ximo\nmax_dd &lt;- PerformanceAnalytics::maxDrawdown(port_ret_dynamic)\nprint(paste(\"Drawdown m√°ximo:\", round(max_dd * 100, 2), \"%\"))\n\n\n[1] \"Drawdown m√°ximo: 39.02 %\"\n\n\nAn√°lise de Drawdown: O gr√°fico de drawdown mostra os per√≠odos em que o portf√≥lio sofreu perdas significativas a partir de picos anteriores. O drawdown m√°ximo quantifica a maior queda percentual registrada. Se o drawdown m√°ximo for relativamente baixo, isso sugere que a estrat√©gia (especialmente com rebalanceamento din√¢mico) conseguiu mitigar grandes perdas, ajudando a preservar o capital durante per√≠odos de alta volatilidade.\n\n\nCompara√ß√£o com a Estrat√©gia de Rebalanceamento Mensal\n\n\nCode\n# Estrat√©gia com rebalancing mensal usando returns_periodo\npf_rebal &lt;- PerformanceAnalytics::Return.portfolio(\n  R = returns_periodo, \n  weights = target_weights, \n  rebalance_on = \"months\"\n)\nequity_rebal &lt;- cumprod(1 + pf_rebal)\n\n# Converter para data frame\nequity_rebal_df &lt;- data.frame(\n  Date = as.Date(index(equity_rebal)),\n  Equity = as.numeric(equity_rebal)\n)\n\n# Combinar as curvas de patrim√¥nio\nequity_combined_df &lt;- merge(equity_dynamic, equity_rebal)\ncolnames(equity_combined_df) &lt;- c(\"Dynamic_Rebal\", \"Monthly_Rebal\")\nequity_combined_df &lt;- data.frame(Date = as.Date(index(equity_combined_df)), coredata(equity_combined_df))\n\n# Plotar as curvas de patrim√¥nio para compara√ß√£o\nlibrary(ggplot2)\nggplot(equity_combined_df, aes(x = Date)) +\n  geom_line(aes(y = Dynamic_Rebal, color = \"Rebal Din√¢mico\")) +\n  geom_line(aes(y = Monthly_Rebal, color = \"Rebal Mensal\")) +\n  labs(title = \"Compara√ß√£o: Curva de Patrim√¥nio\",\n       x = \"Data\", y = \"Valor Acumulado (Base 1)\",\n       color = \"Estrat√©gia\") +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\nNo gr√°fico de compara√ß√£o, as duas curvas (uma para a estrat√©gia de rebalanceamento din√¢mico e outra para a de rebalanceamento mensal) s√£o plotadas juntas. Essa compara√ß√£o revela:\n\nA estrat√©gia de rebalanceamento mensal mant√©m os pesos pr√≥ximos dos valores iniciais periodicamente, o que pode resultar em uma trajet√≥ria de patrim√¥nio mais ‚Äúsuave‚Äù, mas com possivelmente menos aproveitamento de movimentos extremos de alguns ativos.\nA estrat√©gia de rebalanceamento din√¢mico ajusta os pesos somente quando h√° um desvio consider√°vel, o que pode permitir maior captura de ganhos em per√≠odos de forte alta em determinados ativos, mas tamb√©m pode resultar em maior varia√ß√£o se os ativos oscilarem fortemente.\nA compara√ß√£o ajuda a visualizar qual estrat√©gia teria gerado melhor crescimento ou menor risco (drawdown) no per√≠odo analisado.\n\nEm resumo, os gr√°ficos fornecem uma vis√£o integrada de como os pre√ßos e retornos dos ativos evoluem, como o portf√≥lio acumula valor ao longo do tempo e como diferentes estrat√©gias de rebalanceamento afetam tanto o desempenho quanto o risco. Essas an√°lises s√£o essenciais para entender n√£o s√≥ a performance hist√≥rica, mas tamb√©m para orientar decis√µes de investimento com base na gest√£o de risco e retorno.\n\n\n\n\n¬†\n¬†\n\n\n\nReferences\n\n\nMarkowitz, H. (1952). Portfolio Selection. The Journal of Finance, 7(1), 77‚Äì91.\nLink\nSharpe, W. F. (1966). Mutual Fund Performance. The Journal of Business, 39(1), 119‚Äì138.\nLink\nElton, E. J., Gruber, M. J., Brown, S. J., & Goetzmann, W. N. (2007). Modern Portfolio Theory and Investment Analysis (9th ed.). Wiley.\nPerformanceAnalytics. Econometric Tools for Performance and Risk Analysis.\nCRAN: PerformanceAnalytics\nHilpisch, Y. (2018). Python for Finance: Mastering Data-Driven Finance. O‚ÄôReilly Media."
  },
  {
    "objectID": "UnivForecasting_TS_logreturns.html",
    "href": "UnivForecasting_TS_logreturns.html",
    "title": "Ci√™ncia de Dados para Neg√≥cios: Big Data for Finance Project",
    "section": "",
    "text": "Resumo\n\n\n\n\nescrever\n\n\n\n\nIntro\nescrever\n\nR\n\n\n\n\nCode\nlibrary(tidyverse)\nlibrary(tidymodels)\nlibrary(modeltime)\nlibrary(timetk)\nlibrary(purrr)\nlibrary(tidyquant)\nlibrary(tsibble)\nlibrary(prophet)\nlibrary(feasts)\nlibrary(fable)\nlibrary(fabletools)\nlibrary(lubridate)\nlibrary(tictoc)\n\n\nCarregamos os dados:\n\n\nCode\ntickers &lt;- c(\n         \"SAP\",\n         \"CRM\",\n         \"NOW\",\n         \"ORCL\",\n         \"IBM\",\n         \"MSFT\"\n)\n\n\nEnt√£o baixo os dados via Yahoo!Finance:\n\n\nCode\nportfolioPrices &lt;- NULL\n  for ( Ticker in tickers )\n    portfolioPrices &lt;- cbind(\n      portfolioPrices, \n      quantmod::getSymbols.yahoo(\n        Ticker,\n        from = \"2019-01-01\",\n        auto.assign = FALSE\n      )[,4]\n    )\n\nportfolioPrices &lt;- portfolioPrices[apply(portfolioPrices, 1, function(x) all(!is.na(x))),]\n\ncolnames(portfolioPrices) &lt;- c(\n  \"SAP\",\n         \"CRM\",\n         \"NOW\",\n         \"ORCL\",\n         \"IBM\",\n  \"MSFT\"\n)\n\n# Visualizar com DT\n#DT::datatable(tail(portfolioPrices), options = list(pageLength = 10, scrollX = TRUE)) \n\n\nVisualizando os dados dos nossos √∫ltimos retornos dos pre√ßos, temos:\n\n\nCode\nlog_returns &lt;- log(portfolioPrices) - log(lag(portfolioPrices))\nlog_returns &lt;- na.omit(log_returns)\nlog_returns &lt;- log_returns |&gt; \n  timetk::tk_tbl(preserve_index = TRUE, rename_index = \"date\")\n\ntail(log_returns)\n\n\n\n  \n\n\n\n\n\nCode\nln_returns &lt;- log_returns\n\nln_returns |&gt; as.data.frame() |&gt;\n  dplyr::mutate(\n    time = seq_along( SAP )\n  ) |&gt; select(-date) |&gt;\n  tidyr::pivot_longer(\n    !time,\n    names_to = \"Variables\",\n    values_to = \"Value\"  \n      ) |&gt;\n  dplyr::group_by(Variables) |&gt;\n  timetk::plot_time_series(\n    time,\n    Value,\n    .interactive = F, # Change for TRUE for better visualization\n    .facet_ncol = 2,\n    .smooth = FALSE\n  ) +\n  ggplot2::theme(\n    strip.background = ggplot2::element_rect(fill = \"white\", colour = \"white\")\n  )\n\n\n\n\n\n\n\n\n\n\nModelagem com fpp3 e valida√ß√£o cruzada temporal\nPrecisaremos fazer um forecasting de curto prazo com nossos dados hist√≥ricos de retornos pra formularmos nossas recomenda√ß√µes posteriores de compra, venda e espera:\n\nVamos come√ßar com uma s√©rie por vez \\(\\Rightarrow\\) SAP\n\n\n\nCode\n# Primeiro converto pra tsibble\n\nlnretSAP &lt;- log_returns |&gt; \n  select(date, SAP) |&gt; \n  as_tsibble(index = date)\n\nglimpse(lnretSAP)\n\n\nRows: 1,577\nColumns: 2\n$ date &lt;date&gt; 2019-01-03, 2019-01-04, 2019-01-07, 2019-01-08, 2019-01-09, 2019‚Ä¶\n$ SAP  &lt;dbl&gt; -0.038229082, 0.033782809, 0.009775852, 0.015524221, 0.013534974,‚Ä¶\n\n\n\n\nCode\ntreino &lt;- lnretSAP |&gt;\n  filter_index(~\"2025-01-01\")\n\n\nWar models\n\n\nCode\ntic()\n\nModelos &lt;- treino |&gt;\n  model(\n    AjusteExp = ETS(SAP ~ error(\"A\") + trend(\"N\") + season(\"N\")), # Ajuste Exponencial com auto\n    \n    AjExp_aditivo = ETS(SAP ~ error(\"A\") + trend(\"A\") + season(\"A\")), # Ajuste Exponencial Aditivo\n    \n    AjExp_multiplicativo = ETS(SAP ~ error(\"M\") + trend(\"A\") + season(\"M\")), # Ajuste Exponencial Multiplicativo\n    \n    Croston = CROSTON(SAP), # Modelo Croston\n    \n    HoltWinters = ETS(SAP ~ error(\"M\") + trend(\"Ad\") + season(\"M\")), # Holt Winters\n    \n    Holt = ETS(SAP ~ error(\"A\") + trend(\"A\") + season(\"N\")), # Holt\n    \n    HoltAmort = ETS(SAP ~ error(\"A\") + trend(\"Ad\", phi = 0.9) + season(\"N\")), # Holt Amortecida\n    \n    Regr_Comp = TSLM(SAP ~ trend() + season()), # Regressao com tendencia e sazonalidade auto\n    \n    Regr_Harmonica = TSLM(SAP ~ trend() + fourier(K = 2)), # Regressao harmonica\n    \n    Regr_Quebras = TSLM(SAP ~ trend(knots = c(2018, 2019, 2020))), # Regressao com quebras estruturais\n    \n    Snaive = SNAIVE(SAP), # SNAIVE\n    \n    Naive = NAIVE(SAP), #NAIVE\n    \n    Media_Movel = ARIMA(SAP ~ pdq(0,0,1)), # Media Movel Simples\n    \n    autoARIMA = ARIMA(SAP, stepwise = FALSE, approx = FALSE), # Auto ARIMA\n    \n    autoARIMA_saz = ARIMA(SAP, stepwise = FALSE, approx = FALSE, seasonal = TRUE), # AutoARIMA Sazonal\n    \n    #    Regr_erros_ARIMA = auto.arima(SAP, xreg = fourier(K = 3), seasonal = FALSE), # Regressao com erros ARIMA\n    \n    ARIMA_saz_012011 = ARIMA(SAP ~ pdq(0,1,2) + PDQ(0,1,1)), # ARIMA Sazonal ordem 012011\n    \n    ARIMA_saz_210011 = ARIMA(SAP ~ pdq(2,1,0) + PDQ(0,1,1)), # ARIMA Sazonal ordem 210011\n    \n    ARIMA_saz_0301012 = ARIMA(SAP ~ 0 + pdq(3,0,1) + PDQ(0,1,2)), # ARIMA sazonal\n    \n    ARIMA_quad = ARIMA(SAP ~ I(trend()^2)), # ARIMA com tendencia temporal quadratica\n    \n    ARIMA_determ = ARIMA(SAP ~ 1 + trend() + pdq(d = 0)), # ARIMA com tendencia deterministica\n    \n    ARIMA_estocastico = ARIMA(SAP ~ pdq(d = 1)), # ARIMA com tend√™ncia estocastica\n    \n    Regr_Harm_dinamica = ARIMA(SAP ~ fourier(K=2) + PDQ(0,0,0)), # Regressao Harmonica Dinamica\n    \n    Regr_Harm_Din_MultSaz = ARIMA(SAP ~ PDQ(0, 0, 0) + pdq(d = 0) + fourier(period = 7*30, K = 10) + fourier(period = 7*30, K = 5)), \n    \n    Regr_Harm_Din_Saz = ARIMA(SAP ~ PDQ(0, 0, 0) + pdq(d = 0) + fourier(period = \"month\", K = 10) +\n                                fourier(period = \"year\", K = 2) ), # Rgr Harm Mult Saz Complexa\n    \n#    Auto_Prophet = prophet(SAP), # Auto prophet\n    \n#    Prophet_mult = prophet(SAP ~ season(period = \"month\", order = 2, type = \"multiplicative\")),\n    \n#    Prophet_aditivo = prophet(SAP ~ season(period = \"month\", order = 2, type = \"additive\")),\n    \n#    Prophet_geom = prophet(SAP ~ growth(\"geometric\") + season(period = \"month\", order = 2, type = \"multiplicative\")),\n    \n#    Prophet_memo = prophet(SAP ~ growth(\"geometric\") + season(period = \"month\", order = 5) +\n#                             season(period = \"year\", order = 2, type = \"multiplicative\")),\n    \n    Modelo_VAR = VAR(SAP, ic = \"bic\"), # Vetor Autoregressivo \n    \n    Random_Walk = RW(SAP ~ drift()), # Random Walk com drift\n    \n    Rede_Neural_AR = NNETAR(SAP, bootstrap =  TRUE)#, # Rede Neural com auto AR e bootstraping nos erros\n    \n    #    x11 = X_13ARIMA_SEATS(SAP ~ x11()) # X11 ARIMA Seats\n    \n  ) |&gt;\n  \n  forecast(h = \"24 months\") # Horizonte de projecao para os proximos 30 dias apos corte no treino\n\ntoc()  \n\n\n1.95 sec elapsed\n\n\nSelecionamos o melhor modelo (1 fold de valida√ß√£o cruzada somente):\n\n\nCode\nModelos |&gt;\n  accuracy(lnretSAP) |&gt;\n  arrange(RMSE) # Sele√ß√£o da acuracia pelo menor RMSE para o conjunto de modelos\n\n\n\n  \n\n\n\nGero um cen√°rio com o modelo:\n\n\nCode\nfit &lt;- lnretSAP |&gt;\n  model(\n    Regr_Quebras = TSLM(SAP ~ trend(knots = c(2018, 2019, 2020))), # Regressao com quebras estruturais\n  )\n\nsim &lt;- fit |&gt; generate(h = 30, times = 5, bootstrap = TRUE)\n\n\nPlotamos os forecasts com esse modelo pra tr√™s cen√°rios distintos no futuro:\n\n\nCode\nlnretSAP |&gt;\n  filter_index(\"2025-01-01\"~.) |&gt;\n  ggplot(aes(x = date)) +\n  geom_line(aes(y = SAP)) +\n  geom_line(aes(y = .sim, colour = as.factor(.rep)),\n    data = sim) +\n  labs(title=\"Valores projetados de retornos de pre√ßos de contratos futuros da SAP\", y=\"$US\" ) +\n  guides(colour = \"none\")\n\n\n\n\n\n\n\n\n\n\n\nCode\n# Primeiro converto pra tsibble\n\nlnretCRM &lt;- log_returns |&gt; \n  select(date, CRM) |&gt; \n  as_tsibble(index = date)\n\nglimpse(lnretCRM)\n\n\nRows: 1,577\nColumns: 2\n$ date &lt;date&gt; 2019-01-03, 2019-01-04, 2019-01-07, 2019-01-08, 2019-01-09, 2019‚Ä¶\n$ CRM  &lt;dbl&gt; -0.038733996, 0.056357234, 0.030411326, 0.024311817, 0.001851183,‚Ä¶\n\n\n\n\nCode\ntreino &lt;- lnretCRM |&gt;\n  filter_index(~\"2025-01-01\")\n\n\n\n\nCode\ntic()\n\nModelos &lt;- treino |&gt;\n  model(\n    AjusteExp = ETS(CRM ~ error(\"A\") + trend(\"N\") + season(\"N\")), # Ajuste Exponencial com auto\n    \n    AjExp_aditivo = ETS(CRM ~ error(\"A\") + trend(\"A\") + season(\"A\")), # Ajuste Exponencial Aditivo\n    \n    AjExp_multiplicativo = ETS(CRM ~ error(\"M\") + trend(\"A\") + season(\"M\")), # Ajuste Exponencial Multiplicativo\n    \n    Croston = CROSTON(CRM), # Modelo Croston\n    \n    HoltWinters = ETS(CRM ~ error(\"M\") + trend(\"Ad\") + season(\"M\")), # Holt Winters\n    \n    Holt = ETS(CRM ~ error(\"A\") + trend(\"A\") + season(\"N\")), # Holt\n    \n    HoltAmort = ETS(CRM ~ error(\"A\") + trend(\"Ad\", phi = 0.9) + season(\"N\")), # Holt Amortecida\n    \n    Regr_Comp = TSLM(CRM ~ trend() + season()), # Regressao com tendencia e sazonalidade auto\n    \n    Regr_Harmonica = TSLM(CRM ~ trend() + fourier(K = 2)), # Regressao harmonica\n    \n    Regr_Quebras = TSLM(CRM ~ trend(knots = c(2018, 2019, 2020))), # Regressao com quebras estruturais\n    \n    Snaive = SNAIVE(CRM), # SNAIVE\n    \n    Naive = NAIVE(CRM), #NAIVE\n    \n    Media_Movel = ARIMA(CRM ~ pdq(0,0,1)), # Media Movel Simples\n    \n    autoARIMA = ARIMA(CRM, stepwise = FALSE, approx = FALSE), # Auto ARIMA\n    \n    autoARIMA_saz = ARIMA(CRM, stepwise = FALSE, approx = FALSE, seasonal = TRUE), # AutoARIMA Sazonal\n    \n    #    Regr_erros_ARIMA = auto.arima(SAP, xreg = fourier(K = 3), seasonal = FALSE), # Regressao com erros ARIMA\n    \n    ARIMA_saz_012011 = ARIMA(CRM ~ pdq(0,1,2) + PDQ(0,1,1)), # ARIMA Sazonal ordem 012011\n    \n    ARIMA_saz_210011 = ARIMA(CRM ~ pdq(2,1,0) + PDQ(0,1,1)), # ARIMA Sazonal ordem 210011\n    \n    ARIMA_saz_0301012 = ARIMA(CRM ~ 0 + pdq(3,0,1) + PDQ(0,1,2)), # ARIMA sazonal\n    \n    ARIMA_quad = ARIMA(CRM ~ I(trend()^2)), # ARIMA com tendencia temporal quadratica\n    \n    ARIMA_determ = ARIMA(CRM ~ 1 + trend() + pdq(d = 0)), # ARIMA com tendencia deterministica\n    \n    ARIMA_estocastico = ARIMA(CRM ~ pdq(d = 1)), # ARIMA com tend√™ncia estocastica\n    \n    Regr_Harm_dinamica = ARIMA(CRM ~ fourier(K=2) + PDQ(0,0,0)), # Regressao Harmonica Dinamica\n    \n    Regr_Harm_Din_MultSaz = ARIMA(CRM ~ PDQ(0, 0, 0) + pdq(d = 0) + fourier(period = 7*30, K = 10) + fourier(period = 7*30, K = 5)), \n    \n    Regr_Harm_Din_Saz = ARIMA(CRM ~ PDQ(0, 0, 0) + pdq(d = 0) + fourier(period = \"month\", K = 10) +\n                                fourier(period = \"year\", K = 2) ), # Rgr Harm Mult Saz Complexa\n    \n#    Auto_Prophet = prophet(SAP), # Auto prophet\n    \n#    Prophet_mult = prophet(SAP ~ season(period = \"month\", order = 2, type = \"multiplicative\")),\n    \n#    Prophet_aditivo = prophet(SAP ~ season(period = \"month\", order = 2, type = \"additive\")),\n    \n#    Prophet_geom = prophet(SAP ~ growth(\"geometric\") + season(period = \"month\", order = 2, type = \"multiplicative\")),\n    \n#    Prophet_memo = prophet(SAP ~ growth(\"geometric\") + season(period = \"month\", order = 5) +\n#                             season(period = \"year\", order = 2, type = \"multiplicative\")),\n    \n    Modelo_VAR = VAR(CRM, ic = \"bic\"), # Vetor Autoregressivo \n    \n    Random_Walk = RW(CRM ~ drift()), # Random Walk com drift\n    \n    Rede_Neural_AR = NNETAR(CRM, bootstrap =  TRUE)#, # Rede Neural com auto AR e bootstraping nos erros\n    \n    #    x11 = X_13ARIMA_SEATS(SAP ~ x11()) # X11 ARIMA Seats\n    \n  ) |&gt;\n  \n  forecast(h = \"24 months\") # Horizonte de projecao para os proximos 30 dias apos corte no treino\n\ntoc()  \n\n\n2.06 sec elapsed\n\n\n\n\nCode\nfit &lt;- lnretCRM |&gt;\n  model(\n    Regr_Quebras = TSLM(CRM ~ trend(knots = c(2018, 2019, 2020))), # Regressao com quebras estruturais\n  )\n\nsim &lt;- fit |&gt; generate(h = 30, times = 5, bootstrap = TRUE)\n\n\n\n\nCode\nlnretCRM |&gt;\n  filter_index(\"2025-01-01\"~.) |&gt;\n  ggplot(aes(x = date)) +\n  geom_line(aes(y = CRM)) +\n  geom_line(aes(y = .sim, colour = as.factor(.rep)),\n    data = sim) +\n  labs(title=\"Valores projetados de retornos de pre√ßos de contratos futuros da SALESFORCE\", y=\"$US\" ) +\n  guides(colour = \"none\")\n\n\n\n\n\n\n\n\n\n\n\n\n\n¬†\n\n\nCode\n# Processamento para NOW\nlnretNOW &lt;- log_returns |&gt; \n  select(date, NOW) |&gt; \n  as_tsibble(index = date)\n\ntreino &lt;- lnretNOW |&gt; filter_index(~\"2025-01-01\")\n\n# Modelagem\ntic()\nModelos &lt;- treino |&gt;\n  model(\n    AjusteExp = ETS(NOW ~ error(\"A\") + trend(\"N\") + season(\"N\")),\n    AjExp_aditivo = ETS(NOW ~ error(\"A\") + trend(\"A\") + season(\"A\")),\n    AjExp_multiplicativo = ETS(NOW ~ error(\"M\") + trend(\"A\") + season(\"M\")),\n    Croston = CROSTON(NOW),\n    HoltWinters = ETS(NOW ~ error(\"M\") + trend(\"Ad\") + season(\"M\")),\n    Holt = ETS(NOW ~ error(\"A\") + trend(\"A\") + season(\"N\")),\n    HoltAmort = ETS(NOW ~ error(\"A\") + trend(\"Ad\", phi = 0.9) + season(\"N\")),\n    Regr_Comp = TSLM(NOW ~ trend() + season()),\n    Regr_Harmonica = TSLM(NOW ~ trend() + fourier(K = 2)),\n    Regr_Quebras = TSLM(NOW ~ trend(knots = c(2018, 2019, 2020))),\n    Snaive = SNAIVE(NOW),\n    Naive = NAIVE(NOW),\n    Media_Movel = ARIMA(NOW ~ pdq(0,0,1)),\n    autoARIMA = ARIMA(NOW, stepwise = FALSE, approx = FALSE),\n    autoARIMA_saz = ARIMA(NOW, stepwise = FALSE, approx = FALSE, seasonal = TRUE),\n    ARIMA_saz_012011 = ARIMA(NOW ~ pdq(0,1,2) + PDQ(0,1,1)),\n    ARIMA_saz_210011 = ARIMA(NOW ~ pdq(2,1,0) + PDQ(0,1,1)),\n    ARIMA_saz_0301012 = ARIMA(NOW ~ 0 + pdq(3,0,1) + PDQ(0,1,2)),\n    ARIMA_quad = ARIMA(NOW ~ I(trend()^2)),\n    ARIMA_determ = ARIMA(NOW ~ 1 + trend() + pdq(d = 0)),\n    ARIMA_estocastico = ARIMA(NOW ~ pdq(d = 1)),\n    Regr_Harm_dinamica = ARIMA(NOW ~ fourier(K=2) + PDQ(0,0,0)),\n    Regr_Harm_Din_MultSaz = ARIMA(NOW ~ PDQ(0, 0, 0) + pdq(d = 0) + fourier(period = 7*30, K = 10) + fourier(period = 7*30, K = 5)), \n    Regr_Harm_Din_Saz = ARIMA(NOW ~ PDQ(0, 0, 0) + pdq(d = 0) + fourier(period = \"month\", K = 10) + fourier(period = \"year\", K = 2)),\n    Modelo_VAR = VAR(NOW, ic = \"bic\"),\n    Random_Walk = RW(NOW ~ drift()),\n    Rede_Neural_AR = NNETAR(NOW, bootstrap = TRUE)\n  ) |&gt;\n  forecast(h = \"24 months\")\ntoc()\n\n\n1.78 sec elapsed\n\n\nCode\n# Sele√ß√£o do melhor modelo\nModelos |&gt;\n  accuracy(lnretNOW) |&gt;\n  arrange(RMSE)\n\n\n\n  \n\n\n\nCode\n# Proje√ß√µes\nfit &lt;- lnretNOW |&gt;\n  model(\n    Regr_Quebras = TSLM(NOW ~ trend(knots = c(2018, 2019, 2020)))\n  )\n\nsim &lt;- fit |&gt; generate(h = 30, times = 5, bootstrap = TRUE)\n\n# Plot\nlnretNOW |&gt;\n  filter_index(\"2025-01-01\"~.) |&gt;\n  ggplot(aes(x = date)) +\n  geom_line(aes(y = NOW)) +\n  geom_line(aes(y = .sim, colour = as.factor(.rep)),\n    data = sim) +\n  labs(title=\"Retornos projetados da NOW\", y=\"Log Returns\") +\n  guides(colour = \"none\")\n\n\n\n\n\n\n\n\n\n\n\nCode\n# Processamento para ORCL\nlnretORCL &lt;- log_returns |&gt; \n  select(date, ORCL) |&gt; \n  as_tsibble(index = date)\n\ntreino &lt;- lnretORCL |&gt; filter_index(~\"2025-01-01\")\n\n# Modelagem\ntic()\nModelos_ORCL &lt;- treino |&gt;\n  model(\n    AjusteExp = ETS(ORCL ~ error(\"A\") + trend(\"N\") + season(\"N\")),\n    AjExp_aditivo = ETS(ORCL ~ error(\"A\") + trend(\"A\") + season(\"A\")),\n    AjExp_multiplicativo = ETS(ORCL ~ error(\"M\") + trend(\"A\") + season(\"M\")),\n    Croston = CROSTON(ORCL),\n    HoltWinters = ETS(ORCL ~ error(\"M\") + trend(\"Ad\") + season(\"M\")),\n    Holt = ETS(ORCL ~ error(\"A\") + trend(\"A\") + season(\"N\")),\n    HoltAmort = ETS(ORCL ~ error(\"A\") + trend(\"Ad\", phi = 0.9) + season(\"N\")),\n    Regr_Comp = TSLM(ORCL ~ trend() + season()),\n    Regr_Harmonica = TSLM(ORCL ~ trend() + fourier(K = 2)),\n    Regr_Quebras = TSLM(ORCL ~ trend(knots = c(2018, 2019, 2020))),\n    Snaive = SNAIVE(ORCL),\n    Naive = NAIVE(ORCL),\n    Media_Movel = ARIMA(ORCL ~ pdq(0,0,1)),\n    autoARIMA = ARIMA(ORCL, stepwise = FALSE, approx = FALSE),\n    autoARIMA_saz = ARIMA(ORCL, stepwise = FALSE, approx = FALSE, seasonal = TRUE),\n    ARIMA_saz_012011 = ARIMA(ORCL ~ pdq(0,1,2) + PDQ(0,1,1)),\n    ARIMA_saz_210011 = ARIMA(ORCL ~ pdq(2,1,0) + PDQ(0,1,1)),\n    ARIMA_saz_0301012 = ARIMA(ORCL ~ 0 + pdq(3,0,1) + PDQ(0,1,2)),\n    ARIMA_quad = ARIMA(ORCL ~ I(trend()^2)),\n    ARIMA_determ = ARIMA(ORCL ~ 1 + trend() + pdq(d = 0)),\n    ARIMA_estocastico = ARIMA(ORCL ~ pdq(d = 1)),\n    Regr_Harm_dinamica = ARIMA(ORCL ~ fourier(K=2) + PDQ(0,0,0)),\n    Regr_Harm_Din_MultSaz = ARIMA(ORCL ~ PDQ(0, 0, 0) + pdq(d = 0) + fourier(period = 7*30, K = 10) + fourier(period = 7*30, K = 5)), \n    Regr_Harm_Din_Saz = ARIMA(ORCL ~ PDQ(0, 0, 0) + pdq(d = 0) + fourier(period = \"month\", K = 10) + fourier(period = \"year\", K = 2)),\n    Modelo_VAR = VAR(ORCL, ic = \"bic\"),\n    Random_Walk = RW(ORCL ~ drift()),\n    Rede_Neural_AR = NNETAR(ORCL, bootstrap = TRUE)\n  ) |&gt;\n  forecast(h = \"24 months\")\ntoc()\n\n\n1.78 sec elapsed\n\n\nCode\n# Proje√ß√µes\nfit_ORCL &lt;- lnretORCL |&gt;\n  model(\n    Regr_Quebras = TSLM(ORCL ~ trend(knots = c(2018, 2019, 2020)))  # Faltava um par√™ntese aqui\n  )\n\nsim_ORCL &lt;- fit_ORCL |&gt; generate(h = 30, times = 5, bootstrap = TRUE)\n\n# Plot\nlnretORCL |&gt;\n  filter_index(\"2025-01-01\"~.) |&gt;\n  ggplot(aes(x = date)) +\n  geom_line(aes(y = ORCL)) +\n  geom_line(aes(y = .sim, colour = as.factor(.rep)),\n    data = sim) +\n  labs(title=\"Retornos projetados da ORCL\", y=\"Log Returns\") +\n  guides(colour = \"none\")\n\n\n\n\n\n\n\n\n\n\n\nCode\n# Processamento para IBM\nlnretIBM &lt;- log_returns |&gt; \n  select(date, IBM) |&gt; \n  as_tsibble(index = date)\n\ntreino &lt;- lnretIBM |&gt; filter_index(~\"2025-01-01\")\n\n# Modelagem\ntic()\nModelos_IBM &lt;- treino |&gt;\n  model(\n    AjusteExp = ETS(IBM ~ error(\"A\") + trend(\"N\") + season(\"N\")),\n    AjExp_aditivo = ETS(IBM ~ error(\"A\") + trend(\"A\") + season(\"A\")),\n    AjExp_multiplicativo = ETS(IBM ~ error(\"M\") + trend(\"A\") + season(\"M\")),\n    Croston = CROSTON(IBM),\n    HoltWinters = ETS(IBM ~ error(\"M\") + trend(\"Ad\") + season(\"M\")),\n    Holt = ETS(IBM ~ error(\"A\") + trend(\"A\") + season(\"N\")),\n    HoltAmort = ETS(IBM ~ error(\"A\") + trend(\"Ad\", phi = 0.9) + season(\"N\")),\n    Regr_Comp = TSLM(IBM ~ trend() + season()),\n    Regr_Harmonica = TSLM(IBM ~ trend() + fourier(K = 2)),\n    Regr_Quebras = TSLM(IBM ~ trend(knots = c(2018, 2019, 2020))),\n    Snaive = SNAIVE(IBM),\n    Naive = NAIVE(IBM),\n    Media_Movel = ARIMA(IBM ~ pdq(0,0,1)),\n    autoARIMA = ARIMA(IBM, stepwise = FALSE, approx = FALSE),\n    autoARIMA_saz = ARIMA(IBM, stepwise = FALSE, approx = FALSE, seasonal = TRUE),\n    ARIMA_saz_012011 = ARIMA(IBM ~ pdq(0,1,2) + PDQ(0,1,1)),\n    ARIMA_saz_210011 = ARIMA(IBM ~ pdq(2,1,0) + PDQ(0,1,1)),\n    ARIMA_saz_0301012 = ARIMA(IBM ~ 0 + pdq(3,0,1) + PDQ(0,1,2)),\n    ARIMA_quad = ARIMA(IBM ~ I(trend()^2)),\n    ARIMA_determ = ARIMA(IBM ~ 1 + trend() + pdq(d = 0)),\n    ARIMA_estocastico = ARIMA(IBM ~ pdq(d = 1)),\n    Regr_Harm_dinamica = ARIMA(IBM ~ fourier(K=2) + PDQ(0,0,0)),\n    Regr_Harm_Din_MultSaz = ARIMA(IBM ~ PDQ(0, 0, 0) + pdq(d = 0) + fourier(period = 7*30, K = 10) + fourier(period = 7*30, K = 5)), \n    Regr_Harm_Din_Saz = ARIMA(IBM ~ PDQ(0, 0, 0) + pdq(d = 0) + fourier(period = \"month\", K = 10) + fourier(period = \"year\", K = 2)),\n    Modelo_VAR = VAR(IBM, ic = \"bic\"),\n    Random_Walk = RW(IBM ~ drift()),\n    Rede_Neural_AR = NNETAR(IBM, bootstrap = TRUE)\n  ) |&gt;\n  forecast(h = \"24 months\")\ntoc()\n\n\n1.73 sec elapsed\n\n\nCode\n# Proje√ß√µes\nfit_IBM &lt;- lnretIBM |&gt;\n  model(\n    Regr_Quebras = TSLM(IBM ~ trend(knots = c(2018, 2019, 2020))\n  )\n)\nsim_IBM &lt;- fit_IBM |&gt; generate(h = 30, times = 5, bootstrap = TRUE)\n\n# Plot\nlnretIBM |&gt;\n  filter_index(\"2025-01-01\"~.) |&gt;\n  ggplot(aes(x = date)) +\n  geom_line(aes(y = IBM)) +\n  geom_line(aes(y = .sim, colour = as.factor(.rep)),\n    data = sim_IBM) +\n  labs(title=\"Retornos projetados da IBM\", y=\"Log Returns\") +\n  guides(colour = \"none\")\n\n\n\n\n\n\n\n\n\n\n\nCode\n# Processamento para MSFT\nlnretMSFT &lt;- log_returns |&gt; \n  select(date, MSFT) |&gt; \n  as_tsibble(index = date)\n\ntreino &lt;- lnretMSFT |&gt; filter_index(~\"2025-01-01\")\n\n# Modelagem\ntic()\nModelos_MSFT &lt;- treino |&gt;\n  model(\n    AjusteExp = ETS(MSFT ~ error(\"A\") + trend(\"N\") + season(\"N\")),\n    AjExp_aditivo = ETS(MSFT ~ error(\"A\") + trend(\"A\") + season(\"A\")),\n    AjExp_multiplicativo = ETS(MSFT ~ error(\"M\") + trend(\"A\") + season(\"M\")),\n    Croston = CROSTON(MSFT),\n    HoltWinters = ETS(MSFT ~ error(\"M\") + trend(\"Ad\") + season(\"M\")),\n    Holt = ETS(MSFT ~ error(\"A\") + trend(\"A\") + season(\"N\")),\n    HoltAmort = ETS(MSFT ~ error(\"A\") + trend(\"Ad\", phi = 0.9) + season(\"N\")),\n    Regr_Comp = TSLM(MSFT ~ trend() + season()),\n    Regr_Harmonica = TSLM(MSFT ~ trend() + fourier(K = 2)),\n    Regr_Quebras = TSLM(MSFT ~ trend(knots = c(2018, 2019, 2020))),\n    Snaive = SNAIVE(MSFT),\n    Naive = NAIVE(MSFT),\n    Media_Movel = ARIMA(MSFT ~ pdq(0,0,1)),\n    autoARIMA = ARIMA(MSFT, stepwise = FALSE, approx = FALSE),\n    autoARIMA_saz = ARIMA(MSFT, stepwise = FALSE, approx = FALSE, seasonal = TRUE),\n    ARIMA_saz_012011 = ARIMA(MSFT ~ pdq(0,1,2) + PDQ(0,1,1)),\n    ARIMA_saz_210011 = ARIMA(MSFT ~ pdq(2,1,0) + PDQ(0,1,1)),\n    ARIMA_saz_0301012 = ARIMA(MSFT ~ 0 + pdq(3,0,1) + PDQ(0,1,2)),\n    ARIMA_quad = ARIMA(MSFT ~ I(trend()^2)),\n    ARIMA_determ = ARIMA(MSFT ~ 1 + trend() + pdq(d = 0)),\n    ARIMA_estocastico = ARIMA(MSFT ~ pdq(d = 1)),\n    Regr_Harm_dinamica = ARIMA(MSFT ~ fourier(K=2) + PDQ(0,0,0)),\n    Regr_Harm_Din_MultSaz = ARIMA(MSFT ~ PDQ(0, 0, 0) + pdq(d = 0) + fourier(period = 7*30, K = 10) + fourier(period = 7*30, K = 5)), \n    Regr_Harm_Din_Saz = ARIMA(MSFT ~ PDQ(0, 0, 0) + pdq(d = 0) + fourier(period = \"month\", K = 10) + fourier(period = \"year\", K = 2)),\n    Modelo_VAR = VAR(MSFT, ic = \"bic\"),\n    Random_Walk = RW(MSFT ~ drift()),\n    Rede_Neural_AR = NNETAR(MSFT, bootstrap = TRUE)\n  ) |&gt;\n  forecast(h = \"24 months\")\ntoc()\n\n\n1.74 sec elapsed\n\n\nCode\n# Proje√ß√µes\nfit_MSFT &lt;- lnretMSFT |&gt;\n  model(\n    Regr_Quebras = TSLM(MSFT ~ trend(knots = c(2018, 2019, 2020))\n  )\n)\nsim_MSFT &lt;- fit_MSFT |&gt; generate(h = 30, times = 5, bootstrap = TRUE)\n\n# Plot\nlnretMSFT |&gt;\n  filter_index(\"2025-01-01\"~.) |&gt;\n  ggplot(aes(x = date)) +\n  geom_line(aes(y = MSFT)) +\n  geom_line(aes(y = .sim, colour = as.factor(.rep)),\n    data = sim_MSFT) +\n  labs(title=\"Retornos projetados da MSFT\", y=\"Log Returns\") +\n  guides(colour = \"none\")"
  }
]